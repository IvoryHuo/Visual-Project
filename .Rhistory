sz_label <-as.vector(sg_1$"SUBZONE_N")
names(p1) <- sz_label
View(hclust_ward_org)
View(hclust_ward_org)
View(H_origin_dec_wider)
View(H_origin_dec_wider)
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster_org$"SUBZONE_N")
View(cluster_org)
View(cluster_org)
sz_label <-as.vector(cluster_org$"SUBZONE_N_ORI")
names(p1) <- sz_label
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1)
plot(sg_1,border = 'grey',col = p1, main = 'Parition of Subzone by Hierachical Clustering')
p1
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1,border = 'grey',col = p1, pallete = 'set1',
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1)
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 15) +
theme_minimal() +
ggtitle("Elbow Method")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1) +
rect.hclust(hclust_ward_org,k=8,border=c(1:8)) +
legend("topright",legend = paste("cluster",1:8),
fill = 1:8,border = "white",text.font = 10)
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("cluster",1:8),
fill = 1:8,border = "white",text.font = 10)
legend("topright",legend = paste("c",1:8),
fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("c",1:8),
fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("bottom",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
legend("top",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("topleft",legend = paste("c",1:8),fill = 1:8,border = 'white')
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("bottom",legend = paste("c",1:8),fill = 1:8,border = 'white')
legend("bottomright",legend = paste("c",1:8),fill = 1:8,border = 'white')
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("bottomright",legend = paste("c",1:8),fill = 1:8,border = 'white')
groups<-as.factor(cutree(hclust_ward_org,k=8))
sg_cluster_org <- cbind(sg_1, as.matrix(groups)) %>%
rename(`CLUSTER`=`as.matrix.groups.`)
#Geo spatial Clustering
sg_sp <- as_Spatial(sg_1)
sg_nb <- poly2nb(sg_sp)
sg_nb
write_rds(cluster_org,'SG_Bus_Commuting/data/rds/cluster_org.rds')
write_rds(cluster_org,'data/rds/cluster_org.rds')
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
##huoda geospatial data
H_sg_1 <- mpsz %>%
select(3,16)
#Load R Packages
## Add all your packages here
pacman::p_load('shiny', 'shinydashboard', 'shinythemes',
'sf','tmap',
'plotly', 'tidyverse', 'ggstatsplot',
'tools')
#huoda original rds file
H_origin_dec_wider <-read_rds(file = "data/rds/origin_dec_wider.rds")
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
#read geospatial data
mpbus <- st_read(dsn = "data/geo/busstop",layer = "BusStop")
mpsz <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL")
mppa <- st_read(dsn = "data/geo/pa",layer = "MP14_PLNG_AREA_NO_SEA_PL")
mpre <- st_read(dsn = "data/geo/region",layer = "MP14_REGION_WEB_PL")
##huoda geospatial data
H_sg_1 <- mpsz %>%
select(3,16)
#Add geospatial dataset below
##huoda mpxx data
H_mpsz_origin_dec <-left_join(mpsz,H_origin_dec_wider, by = c('SUBZONE_N'='SUBZONE_N')) %>%
select(3,16,17:42)
#add a paragraph to introduce the proj
introduction = "Welcome to Singapore Bus Commuting Pattern Interactive Dashboard!"
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
View(cluster_org)
View(cluster_org)
regression_data <- read_rds(file = "data/rds/regression_data.rds")
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
summarise(POP = mean(POP_ORI),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_ORI),
OTHERS = mean(OTHERS_ORI),
RECREATION = mean(RECREATION_ORI),
RESIDENTIAL = mean(RESIDENTIAL_ORI),
TRANSIT = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI) %>%
replace_na(list(x=0))
cluster_org[is.na(cluster_org)] <- 0
View(cluster_org)
View(cluster_org)
write_rds(cluster_org,'data/rds/cluster_org.rds')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
#Load R Packages
## Add all your packages here
pacman::p_load('shiny', 'shinydashboard', 'shinythemes',
'sf','tmap',
'plotly', 'tidyverse', 'ggstatsplot',
'tools')
#huoda original rds file
H_origin_dec_wider <-read_rds(file = "data/rds/origin_dec_wider.rds")
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
cluster_vars.cor = cor(H_cluster_org[,c(3:9)])
View(cluster_vars.cor)
View(cluster_vars.cor)
#huoda_cluster_data
H_cluster_vars.cor = cor(H_cluster_org[,c(3:9)])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
regression_data <- read_rds(file = "data/rds/regression_data.rds")
View(regression_data)
View(regression_data)
cluster_des <- regression_data %>%
select(c(1:3,5,7:8,15:19)) %>%
group_by(DAY_TYPE,SUBZONE_N_DES) %>%
summarise(POP = mean(POP_DES),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_DES),
OTHERS = mean(OTHERS_DES),
RECREATION = mean(RECREATION_DES),
RESIDENTIAL = mean(RESIDENTIAL_DES),
TRANSIT = mean(TRANSIT_DES)) %>%
ungroup() %>%
drop_na(SUBZONE_N_DES) %>%
replace_na(list(x=0))
cluster_des[is.na(cluster_des)] <- 0
write_rds(cluster_des,'data/rds/cluster_des.rds')
runApp()
shiny::runApp()
library(shiny); runApp('app_final.R')
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
pacman::p_load(rgdal, spdep, tmap, sf,
ggpubr, cluster, factoextra, NbClust,
heatmaply, corrplot, tidyverse,psych,
Hmisc,knitr,kableExtra,ClustGeo,ggiraphExtra)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
regression_data <- read_rds(file = "data/rds/regression_data.rds")
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
summarise(POP = mean(POP_ORI),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_ORI),
OTHERS = mean(OTHERS_ORI),
RECREATION = mean(RECREATION_ORI),
RESIDENTIAL = mean(RESIDENTIAL_ORI),
TRANSIT = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI) %>%
replace_na(list(x=0))
cluster_org[is.na(cluster_org)] <- 0
write_rds(cluster_org,'data/rds/cluster_org.rds')
cluster_des <- regression_data %>%
select(c(1:3,5,7:8,15:19)) %>%
group_by(DAY_TYPE,SUBZONE_N_DES) %>%
summarise(POP = mean(POP_DES),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_DES),
OTHERS = mean(OTHERS_DES),
RECREATION = mean(RECREATION_DES),
RESIDENTIAL = mean(RESIDENTIAL_DES),
TRANSIT = mean(TRANSIT_DES)) %>%
ungroup() %>%
drop_na(SUBZONE_N_DES) %>%
replace_na(list(x=0))
cluster_des[is.na(cluster_des)] <- 0
write_rds(cluster_des,'data/rds/cluster_des.rds')
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
#clustering
cluster.vars <- cluster_org %>%
filter(DAY_TYPE=='WEEKDAY') %>%
select(c(2:9))
row.names(cluster.vars) <- cluster.vars$SUBZONE_N_ORI
df_org <- cluster.vars %>%
select(c(2:8))
#scale
df_org_scaled<-scale(df_org)
#Hierarchical Clustering
#number of clusters
set.seed(123)
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 15) +
theme_minimal() +
ggtitle("Elbow Method")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("bottomright",legend = paste("c",1:8),fill = 1:8,border = 'white')
#Geo spatial Clustering
sg_sp <- as_Spatial(sg_1)
sg_nb <- poly2nb(sg_sp)
sg_nb
sg_1
sg_11 <- sg_1[-36,-37,-38,-276,-298,]
sg_sp <- as_Spatial(sg_11)
sg_nb <- poly2nb(sg_sp)
sg_nb
sg_11 <- sg_1[-c(36,-37,-38,-276,-298),]
sg_11 <- sg_1[c(-36,-37,-38,-276,-298),]
sg_sp <- as_Spatial(sg_11)
sg_nb <- poly2nb(sg_sp)
sg_nb
df_org_spatial <- df_org_scaled[c(-36,-37,-38,-276,-298),]
lcosts <- nbcosts(sg_nb, df_org_spatial)
df_org_spatial
len(df_org_spatial)
View(sg_11)
View(sg_11)
View(df_org_spatial)
View(df_org_spatial)
View(cluster_vars.cor)
View(cluster_vars.cor)
View(cluster_org)
View(cluster_org)
#Geo spatial Clustering
#remove geospatial data with no neighbor
sg <- sg_1 %>%
inner_join(cluster_org,by.x = 'SUBZONE_N',by.y='SUBZONE_N_ORI')
#Geo spatial Clustering
#remove geospatial data with no neighbor
sg <- sg_1 %>%
inner_join(cluster_org,by = c('SUBZONE_N','SUBZONE_N_ORI'))
#Geo spatial Clustering
#remove geospatial data with no neighbor
sg <- inner_join(sg_1,cluster_org,by = c('SUBZONE_N','SUBZONE_N_ORI'))
View(sg_1)
View(sg_1)
cluster_org
#Geo spatial Clustering
#remove geospatial data with no neighbor
sg <- inner_join(sg_1,cluster_org,by = c('SUBZONE_N','SUBZONE_N_ORI'))
#Geo spatial Clustering
#remove geospatial data with no neighbor
sg <- inner_join(sg_1,cluster_org,by = c('SUBZONE_N'='SUBZONE_N_ORI'))
View(sg)
View(sg)
View(df_org)
View(df_org)
View(cluster_org)
View(cluster_org)
View(cluster_vars.cor)
View(cluster_vars.cor)
#Geo spatial Clustering
#remove geospatial data with no neighbor
appeared_sz <- cluster_org %>%
group_by(SUBZONE_N_ORI) %>%
select(2)
View(appeared_sz)
View(appeared_sz)
#Geo spatial Clustering
#remove geospatial data with no neighbor
appeared_sz <- unique(cluster_org$SUBZONE_N_ORI)
appeared_sz
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
View(cluster_vars.cor)
View(cluster_vars.cor)
pacman::p_load(rgdal, spdep, tmap, sf,
ggpubr, cluster, factoextra, NbClust,
heatmaply, corrplot, tidyverse,psych,
Hmisc,knitr,kableExtra,ClustGeo,ggiraphExtra)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
cluster_org <- read_rds(file = "data/rds/cluster_org.rds")
gc()
gc()
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
cluster_org <- read_rds(file = "data/rds/cluster_org.rds")
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
#clustering
cluster.vars <- cluster_org %>%
filter(DAY_TYPE=='WEEKDAY') %>%
select(c(2:9))
appeared_sz <- unique(cluster.vars$SUBZONE_N_ORI)
sg_1 <- sg_1 %>%
filter(SUNZONE_N %in% appeared_sz)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
sg_1 <- sg_1 %>%
filter(SUNZONE_N %in% appeared_sz)
View(sg_1)
View(sg_1)
sg_1 <- sg_1 %>%
filter('SUNZONE_N' %in% appeared_sz)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
sg_1 <- sg_1 %>%
filter('SUNZONE_N' %in% cluster.vars$SUBZONE_N_ORI)
View(sg_1)
View(sg_1)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
sg_1 <- sg_1 %>%
filter(SUNZONE_N %in% cluster.vars$SUBZONE_N_ORI)
sg <- sg_1 %>%
filter('SUNZONE_N' %in% appeared_sz)
View(sg_1)
View(sg_1)
colnames(sg_1)[1] = 'SUBZONE'
View(sg_1)
View(sg_1)
sg <- sg_1 %>%
filter(SUBZONE %in% appeared_sz)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
appeared_sz <- unique(cluster.vars$SUBZONE_N_ORI)
sg <- sg_1 %>%
filter("SUBZONE_N" %in% appeared_sz)
colnames(sg_1)[1] = 'SUBZONE'
sg <- sg_1 %>%
filter(SUBZONE %in% appeared_sz)
sg_1 <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL") %>%
select(3,16)
sg <- sg_1 %>%
filter(SUBZONE_N %in% appeared_sz)
sg_sp <- as_Spatial(sg)
sg_nb <- poly2nb(sg_sp)
sg_nb
lcosts <- nbcosts(sg_nb, df_org_scaled)
row.names(cluster.vars) <- cluster.vars$SUBZONE_N_ORI
df_org <- cluster.vars %>%
select(c(2:8))
#scale
df_org_scaled<-scale(df_org)
lcosts <- nbcosts(sg_nb, df_org_scaled)
sg.wm<-nb2listw(sg_nb,lcosts,style = "B")
summary(sg.wm)
sg.mst <-mstree(sg.wm)
head(sg.mst)
#plot
plot(sg_sp, border=gray(.5))
plot.mst(sg.mst,
coordinates(sg_sp),
col="blue",
cex.lab=0.2,
cex.circles=0.005,
add=TRUE)
clust6 <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "euclidean",
ncuts = 5)
ccs6 <- clust6$groups
table(ccs6)
clust6 <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "euclidean",
ncuts = 10)
ccs6 <- clust6$groups
table(ccs6)
clust6 <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "euclidean",
ncuts = 15)
ccs6 <- clust6$groups
table(ccs6)
clust6 <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "maximum",
ncuts = 5)
ccs6 <- clust6$groups
table(ccs6)
groups_mat <- as.matrix(clust6$groups)
sg_sf_spatialcluster <- cbind(sg, as.factor(groups_mat)) %>%
rename(`SP_CLUSTER`=`as.factor.groups_mat.`)
qtm(sg_sf_spatialcluster, "SP_CLUSTER")
clust <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "minimum",
ncuts = 10)
ccs <- clust$groups
clust <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "minimum",
ncuts = 10)
clust <- spdep::skater(edges = sg.mst[,1:2],
data = df_org_scaled,
method = "manhattan",
ncuts = 10)
ccs <- clust$groups
groups_mat <- as.matrix(clust$groups)
sg_sf_spatialcluster <- cbind(sg, as.factor(groups_mat)) %>%
rename(`SP_CLUSTER`=`as.factor.groups_mat.`)
table(ccs)
qtm(sg_sf_spatialcluster, "SP_CLUSTER")
runApp('app_final.R')
runApp('app_final.R')
runApp('app_final.R')
runApp('app_final.R')
runApp('app_final.R')
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
runApp('app_final.R')
runApp('app_final.R')
library(shiny); runApp('app_final.R')
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny); runApp('sample_app.R')
gc()
gc()
library(shiny); runApp('sample_app.R')
shiny::runApp()
