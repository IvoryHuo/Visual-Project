#multivariate analysis
cluster_vars.cor = cor(H_organised_dec_hrs[,4:8])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
#multivariate analysis
cluster_vars.cor = cor(H_organised_dec_hrs[,c(1,4:8)])
#multivariate analysis
cluster_vars.cor = cor(H_organised_dec_hrs[,c(5:8)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
#multivariate analysis
cluster_vars.cor = cor(H_organised_dec_hrs[,c(3:8)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
regression_data <- read_rds(file = "data/rds/regression_data.rds")
View(regression_data)
View(regression_data)
View(sg_2)
View(sg_2)
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14))
View(cluster_org)
View(cluster_org)
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(COMMUTER_FLOW),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHRES_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_FLow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHRES_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHRES_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),narm = TRUE) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
#group_by('YEAR_MONTH','DAY_TYPE','TIME_PER_HOUR','SUBZONE_N_ORI') %>%
group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),narm = TRUE) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14))
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by('YEAR_MONTH','DAY_TYPE','SUBZONE_N_ORI') %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),narm = TRUE) %>%
ungroup()
View(cluster_org)
View(cluster_org)
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(YEAR_MONTH,DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),narm = TRUE) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),narm = TRUE) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI),na.rm = TRUE) %>%
ungroup()
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup()
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
clutser_org[is.na(cluster_org)] <- 0
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
cluster_org[is.na(cluster_org)] <- 0
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI)
cluster_org[is.na(cluster_org)] <- 0
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI) %>%
replace_na(0)
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI)
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
#group_by('SUBZONE_N_ORI') %>%
summarise(pop = mean(POP_ORI),
commuter = sum(Commuter_Flow),
business_edu = mean(BUSINESS_EDU_ORI),
others = mean(OTHERS_ORI),
recreation = mean(RECREATION_ORI),
residential = mean(RESIDENTIAL_ORI),
transit = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI) %>%
replace_na(list(x=0))
cluster_org[is.na(cluster_org)] <- 0
#clustering
cluster_org_scale<-scale(cluster_org)
#clustering
cluster.vars <- cluster_org %>%
filter(DAY_TYPE='WEEKDAY') %>%
select(c(2:9))
#clustering
cluster.vars <- cluster_org %>%
filter(DAY_TYPE=='WEEKDAY') %>%
select(c(2:9))
View(cluster_org)
View(cluster_org)
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
row.names(cluster.vars) <- cluster.vars$SUBZONE_N_ORI
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
View(cluster.vars)
df_org <- cluster.vars %>%
select(c(2:8))
View(df_org)
View(df_org)
head(df_org)
row.names(cluster.vars) <- cluster.vars$SUBZONE_N_ORI
df_org_scaled<-scale(df_org)
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
#Hierarchical Clustering
#number of clusters
set.seed(123)
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 10) +
theme_minimal() +
ggtitle("Elbow Method")
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 20) +
theme_minimal() +
ggtitle("Elbow Method")
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 30) +
theme_minimal() +
ggtitle("Elbow Method")
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 15) +
theme_minimal() +
ggtitle("Elbow Method")
rect.hclust(hclust_ward_org,k=8)
legent("topright")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8)
legend("topright")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1,2,3,4,5,6,7,8))
legend("topright",legend=paste("cluster",1:8))
rect.hclust(hclust_ward_org,k=8,border=c(1,2,3,4,5,6,7,8))
legend("topright",legend=paste("cluster",1:8),fill = 1:8,border = "white")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(sg_1$SUBZONE_N)
names(p1) <- sz_label
p1
sz_label <-as.vector(sg_1$"SUBZONE_N")
names(p1) <- sz_label
View(hclust_ward_org)
View(hclust_ward_org)
View(H_origin_dec_wider)
View(H_origin_dec_wider)
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster_org$"SUBZONE_N")
View(cluster_org)
View(cluster_org)
sz_label <-as.vector(cluster_org$"SUBZONE_N_ORI")
names(p1) <- sz_label
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1)
plot(sg_1,border = 'grey',col = p1, main = 'Parition of Subzone by Hierachical Clustering')
p1
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1,border = 'grey',col = p1, pallete = 'set1',
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
plot(sg_1)
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
fviz_nbclust(df_org_scaled, hcut, method = "wss", k.max = 15) +
theme_minimal() +
ggtitle("Elbow Method")
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1) +
rect.hclust(hclust_ward_org,k=8,border=c(1:8)) +
legend("topright",legend = paste("cluster",1:8),
fill = 1:8,border = "white",text.font = 10)
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("cluster",1:8),
fill = 1:8,border = "white",text.font = 10)
legend("topright",legend = paste("c",1:8),
fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("c",1:8),
fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("bottom",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
legend("top",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
#clustering
proxmat_org <- dist(df_org_scaled, method = 'euclidean')
hclust_ward_org <- hclust(proxmat_org, method = 'ward.D')
plot(hclust_ward_org, cex = 0.1)
rect.hclust(hclust_ward_org,k=8,border=c(1:8))
legend("topright",legend = paste("c",1:8),fill = 1:8,border = "white",text.font = 10)
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("topleft",legend = paste("c",1:8),fill = 1:8,border = 'white')
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("bottom",legend = paste("c",1:8),fill = 1:8,border = 'white')
legend("bottomright",legend = paste("c",1:8),fill = 1:8,border = 'white')
#Plot Map
p1 <-cutree(hclust_ward_org,8)
sz_label <-as.vector(cluster.vars$"SUBZONE_N_ORI")
names(p1) <- sz_label
plot(sg_1,border = 'grey',col = p1,
main = 'Parition of Subzone by Hierachical Clustering')
legend("bottomright",legend = paste("c",1:8),fill = 1:8,border = 'white')
groups<-as.factor(cutree(hclust_ward_org,k=8))
sg_cluster_org <- cbind(sg_1, as.matrix(groups)) %>%
rename(`CLUSTER`=`as.matrix.groups.`)
#Geo spatial Clustering
sg_sp <- as_Spatial(sg_1)
sg_nb <- poly2nb(sg_sp)
sg_nb
write_rds(cluster_org,'SG_Bus_Commuting/data/rds/cluster_org.rds')
write_rds(cluster_org,'data/rds/cluster_org.rds')
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
##huoda geospatial data
H_sg_1 <- mpsz %>%
select(3,16)
#Load R Packages
## Add all your packages here
pacman::p_load('shiny', 'shinydashboard', 'shinythemes',
'sf','tmap',
'plotly', 'tidyverse', 'ggstatsplot',
'tools')
#huoda original rds file
H_origin_dec_wider <-read_rds(file = "data/rds/origin_dec_wider.rds")
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
#read geospatial data
mpbus <- st_read(dsn = "data/geo/busstop",layer = "BusStop")
mpsz <- st_read(dsn = "data/geo/sz",layer = "MP14_SUBZONE_NO_SEA_PL")
mppa <- st_read(dsn = "data/geo/pa",layer = "MP14_PLNG_AREA_NO_SEA_PL")
mpre <- st_read(dsn = "data/geo/region",layer = "MP14_REGION_WEB_PL")
##huoda geospatial data
H_sg_1 <- mpsz %>%
select(3,16)
#Add geospatial dataset below
##huoda mpxx data
H_mpsz_origin_dec <-left_join(mpsz,H_origin_dec_wider, by = c('SUBZONE_N'='SUBZONE_N')) %>%
select(3,16,17:42)
#add a paragraph to introduce the proj
introduction = "Welcome to Singapore Bus Commuting Pattern Interactive Dashboard!"
#multivariate analysis
cluster_vars.cor = cor(cluster_org[,c(3:9)])
corrplot.mixed(cluster_vars.cor,
lower = "ellipse",
upper = "number",
tl.pos = "lt",
diag = "l",
tl.col = "black")
View(cluster_org)
View(cluster_org)
regression_data <- read_rds(file = "data/rds/regression_data.rds")
cluster_org <- regression_data %>%
select(c(1:4,6,8,10:14)) %>%
group_by(DAY_TYPE,SUBZONE_N_ORI) %>%
summarise(POP = mean(POP_ORI),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_ORI),
OTHERS = mean(OTHERS_ORI),
RECREATION = mean(RECREATION_ORI),
RESIDENTIAL = mean(RESIDENTIAL_ORI),
TRANSIT = mean(TRANSIT_ORI)) %>%
ungroup() %>%
drop_na(SUBZONE_N_ORI) %>%
replace_na(list(x=0))
cluster_org[is.na(cluster_org)] <- 0
View(cluster_org)
View(cluster_org)
write_rds(cluster_org,'data/rds/cluster_org.rds')
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
#Load R Packages
## Add all your packages here
pacman::p_load('shiny', 'shinydashboard', 'shinythemes',
'sf','tmap',
'plotly', 'tidyverse', 'ggstatsplot',
'tools')
#huoda original rds file
H_origin_dec_wider <-read_rds(file = "data/rds/origin_dec_wider.rds")
H_cluster_org <-read_rds(file="data/rds/cluster_org.rds")
cluster_vars.cor = cor(H_cluster_org[,c(3:9)])
View(cluster_vars.cor)
View(cluster_vars.cor)
#huoda_cluster_data
H_cluster_vars.cor = cor(H_cluster_org[,c(3:9)])
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
regression_data <- read_rds(file = "data/rds/regression_data.rds")
View(regression_data)
View(regression_data)
cluster_des <- regression_data %>%
select(c(1:3,5,7:8,15:19)) %>%
group_by(DAY_TYPE,SUBZONE_N_DES) %>%
summarise(POP = mean(POP_DES),
COMMUTER = sum(Commuter_Flow),
BUSINESS_EDU = mean(BUSINESS_EDU_DES),
OTHERS = mean(OTHERS_DES),
RECREATION = mean(RECREATION_DES),
RESIDENTIAL = mean(RESIDENTIAL_DES),
TRANSIT = mean(TRANSIT_DES)) %>%
ungroup() %>%
drop_na(SUBZONE_N_DES) %>%
replace_na(list(x=0))
cluster_des[is.na(cluster_des)] <- 0
write_rds(cluster_des,'data/rds/cluster_des.rds')
runApp()
